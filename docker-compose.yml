services:

  redis:
    image: redis
    container_name: redis

  db:
    image: postgres
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    restart: always
    env_file:
      - ./backend/.env.dev # Ensure the global .env file is used

  backend:
    image: backend:django
    container_name: django_app
    command: >
      sh -c "python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    build:
      context: ./backend
    volumes:
      - ./backend:/django # Mount the local directory to /django inside the container
      - static_volume:/django/staticfiles
      - media_volume:/django/media
    expose:
      - "8000" # Expose port 8000 internally (not to host)
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.dev # Ensure the global .env file is used
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ./backend
    container_name: celery
    command: celery -A config worker -l INFO
    depends_on:
      - db
      - redis
      - backend

volumes:
  static_volume:
  media_volume:


  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./nginx/nginx.setup.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./backend:/django
  #   ports:
  #     - "80:8080"
